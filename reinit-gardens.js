// Script para limpar e reinicializar apenas a cole√ß√£o gardens
const { MongoClient } = require('mongodb');

const MONGODB_URI = 'mongodb://localhost:32768/hackaton-scti-agua';

async function reinitGardens() {
  console.log('üîÑ Reinicializando cole√ß√£o gardens...\n');

  let client;
  
  try {
    client = new MongoClient(MONGODB_URI);
    await client.connect();
    
    const db = client.db('hackaton-scti-agua');

    // Limpar cole√ß√£o gardens
    console.log('üóëÔ∏è  Removendo gardens antigos...');
    await db.collection('gardens').deleteMany({});
    console.log('   ‚úì Cole√ß√£o limpa\n');

    // Inserir novos gardens
    console.log('üèûÔ∏è  Criando novos gardens...');
    const gardensData = [
      {
        name: 'Fazenda Grande Produtor',
        description: 'Propriedade para grande produ√ß√£o agr√≠cola',
        type: 'large-producer',
        location: {
          latitude: -23.5505,
          longitude: -46.6333
        },
        area: 250.75,
        zones: [],
        created_at: new Date(),
        updated_at: new Date()
      },
      {
        name: 'S√≠tio Pequeno Produtor',
        description: 'Propriedade para agricultura familiar',
        type: 'small-producer',
        location: {
          latitude: -23.5650,
          longitude: -46.6500
        },
        area: 15.5,
        zones: [],
        created_at: new Date(),
        updated_at: new Date()
      }
    ];

    const result = await db.collection('gardens').insertMany(gardensData);
    console.log(`   ‚úì ${Object.keys(result.insertedIds).length} gardens criados:`);
    console.log('   ‚Ä¢ Fazenda Grande Produtor (250.75 ha)');
    console.log('   ‚Ä¢ S√≠tio Pequeno Produtor (15.5 ha)\n');

    // Mostrar IDs
    console.log('üìã IDs dos Gardens:');
    const gardens = await db.collection('gardens').find({}).toArray();
    gardens.forEach(garden => {
      console.log(`   ‚Ä¢ ${garden.name}: ${garden._id}`);
    });

    console.log('\n‚úÖ Reinicializa√ß√£o conclu√≠da com sucesso!\n');

  } catch (error) {
    console.error('‚ùå Erro:', error);
    process.exit(1);
  } finally {
    if (client) {
      await client.close();
    }
  }
}

reinitGardens().catch(console.error);
